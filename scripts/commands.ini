[script]
n0=;Function not needed for now
n1=;on *:TEXT:!open:#: {
n2=;$fopen t test.txt
n3=;if ($ferr) {
n4=;msg $chan Error!
n5=;}
n6=;else {
n7=;msg $chan Open!
n8=;}
n9=;}
n10=
n11=on *:START: {
n12=  $hmake images
n13=  msg $chan $hget(images, 0).item
n14=}
n15=
n16=;Closes the hash file
n17=on *:TEXT:!close:#: {
n18=  $fclose hash
n19=  ;msg $chan Closed!
n20=}
n21=
n22=on *:TEXT:!reset:#: {
n23=  if ($hget(images)) {
n24=    /hfree images
n25=  }
n26=  else {}
n27=  hmake images
n28=  /write -c savedImages.txt
n29=}
n30=
n31=;Displays size and all hash table keys and values
n32=on *:TEXT:!getinfo:#: {
n33=  var %j = 1
n34=  var %size = $hget(images, 0).item
n35=  while (%j <= %size) {
n36=  var %word = $hget(images, %j).item : $hget(images, %j).data
n37=    msg $nick %word
n38=    inc %j
n39=  }
n40=}
n41=
n42=on *:TEXT:!save:#: {
n43=  /hsave -o images savedImages.txt
n44=}
n45=
n46=on *:TEXT:!load:#: {
n47=  /hload images savedImages.txt
n48=}
n49=
n50=;on *:TEXT:!write:#: {
n51=;Opens a new file "hashTable.txt" and calls it "hash"
n52=;/fopen -o hash hashTable.txt
n53=;var %i = 1
n54=;Iterates through the hash table,
n55=;while ($hget(images, %i).item) {
n56=;Writes each key and data to a newline on the file.
n57=;/fwrite -n hash $hget(images, %i).item
n58=;/fwrite -n hash $hget(images, %i).data
n59=;inc %i
n60=;}  
n61=;}
