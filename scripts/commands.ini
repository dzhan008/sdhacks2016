[script]
n0=;Function not needed for now
n1=;on *:TEXT:!open:#: {
n2=;$fopen t test.txt
n3=;if ($ferr) {
n4=;msg $chan Error!
n5=;}
n6=;else {
n7=;msg $chan Open!
n8=;}
n9=;}
n10=
n11=on *:START: {
n12=  $hmake images
n13=  msg $chan $hget(images, 0).item
n14=}
n15=
n16=;Closes the hash file
n17=on *:TEXT:!close:#: {
n18=  $fclose hash
n19=  ;msg $chan Closed!
n20=}
n21=
n22=on *:TEXT:imgur.com:#: {
n23=  ;Checks if hash table is created
n24=  if ($hget(images)) {
n25=    msg $chan Hash table exists!
n26=  }
n27=  else {
n28=    msg $chan Does not exist!
n29=  }
n30=  ;Checks if "imgur.com" is in the user's comment
n31=  if (imgur.com isin $1-) {
n32=    ;Adds the username and link as the key and val to hash table
n33=    /hadd -s images $nick $1-
n34=
n35=    ;For debugging. Outputs number of items, key, and value
n36=    ;msg $chan $hget(images, 0).item
n37=    ;msg $chan $hget(images, $nick)
n38=    ;msg $chan $nick
n39=  }
n40=  else {}
n41=}
n42=
n43=on *:TEXT:!destroy:#: {
n44=  if($hget(images)) {
n45=    $hfree images
n46=  }
n47=  else {}
n48=  hmake images
n49=  /write -c savedImages.txt
n50=}
n51=
n52=;Displays size and all hash table keys and values
n53=on *:TEXT:!display:#: {
n54=  msg $chan $hget(images, 0).item
n55=  var %j = 1
n56=  var %size = $hget(images, 0).item
n57=  msg $chan %j
n58=  while (%j <= %size) {
n59=    msg $chan $hget(images, %j).item
n60=    msg $chan $hget(images, %j).data
n61=    inc %j
n62=  }
n63=}
n64=
n65=on *:TEXT:!save:#: {
n66=  /hsave -o images savedImages.txt
n67=}
n68=
n69=on *:TEXT:!load:#: {
n70=  /hload images savedImages.txt
n71=}
n72=
n73=;on *:TEXT:!write:#: {
n74=;Opens a new file "hashTable.txt" and calls it "hash"
n75=;/fopen -o hash hashTable.txt
n76=;var %i = 1
n77=;Iterates through the hash table,
n78=;while ($hget(images, %i).item) {
n79=;Writes each key and data to a newline on the file.
n80=;/fwrite -n hash $hget(images, %i).item
n81=;/fwrite -n hash $hget(images, %i).data
n82=;inc %i
n83=;}  
n84=;}
